package com.myapp.question.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.myapp.question.dao.QuestionRepository;
import com.myapp.question.model.Question;
import com.myapp.question.model.QuestionWrapper;

@Service
public class QuestionService{
	
	@Autowired
	QuestionRepository repo;

	public ResponseEntity<List<Question>> getAllQuestion() {
		
		return new ResponseEntity<List<Question>>( repo.findAll(),HttpStatus.OK);
	}

	public ResponseEntity<List<Question>> getQuestionsByCategory(String category) {
		
		return new ResponseEntity<List<Question>>(repo.findAllByCategory(category),HttpStatus.OK);
	}

	public ResponseEntity<Question> addQuestion(Question question) {
		return new ResponseEntity<Question>(repo.save(question),HttpStatus.ACCEPTED);
	}

	public ResponseEntity<List<Integer>> getQuestionsForQuiz(String categoryName,Integer noOfQns) {
		
		List<Integer> questionId = repo.findRandomQuestionIdByCategory(categoryName,noOfQns);
		
		return new ResponseEntity<List<Integer>>(questionId,HttpStatus.OK);
	}

	public ResponseEntity<List<QuestionWrapper>> getQuestionsByIds(List<Integer> qnsIds) {
		
		List<Question> questions = null;
		List<QuestionWrapper> qnsForClient = null;
		for(int id : qnsIds)
		{
			questions.add(repo.findById(id).get());
			QuestionWrapper wrapperQns = new QuestionWrapper(id, 
					questions.get(id).getCategory(),
					questions.get(id).getQuestionTitle(), 
					questions.get(id).getOption1(),  
					questions.get(id).getOption2(), 
					questions.get(id).getOption3(),
					questions.get(id).getOption4()
					);
			qnsForClient.add(wrapperQns);
		}
		
		
		return new ResponseEntity<List<QuestionWrapper>>(HttpStatus.ACCEPTED);
	}
	

}
